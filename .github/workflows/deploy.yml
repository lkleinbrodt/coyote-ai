name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Backend setup and test
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          ENV: test
          OPENROUTER_API_KEY: ${{ secrets.TEST_OPENROUTER_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.TEST_OPENAI_API_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.TEST_GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.TEST_GOOGLE_CLIENT_SECRET }}
          SECRET_KEY: test_secret_key
          PROD_BASE_URL: http://localhost:5000
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          DEEPSEEK_API_KEY: ${{ secrets.TEST_DEEPSEEK_API_KEY }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TEST_TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TEST_TWILIO_AUTH_TOKEN }}
          TWILIO_NUMBER: +1234567890
          BASE_URL: http://localhost:5000
        run: |
          python -m pytest tests/

      # Deploy both frontend and backend
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull latest code
            cd /var/www/coyote-ai
            git pull origin main
            
            # Backend deployment
            source venv/bin/activate
            pip install -r requirements.txt
            
            # Frontend deployment - builds static files that Nginx serves
            cd frontend
            npm ci
            npm run build
            
            # Restart only the application server to pick up backend changes
            # No need to restart Nginx as it automatically serves the new static files
            systemctl restart coyote-ai 