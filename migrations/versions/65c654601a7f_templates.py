"""templates

Revision ID: 65c654601a7f
Revises: 6076820e36cc
Create Date: 2025-09-02 15:17:31.104503

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "65c654601a7f"
down_revision = "6076820e36cc"
branch_labels = None
depends_on = None

from sqlalchemy.dialects import postgresql

questcategory = postgresql.ENUM(
    "FITNESS",
    "SOCIAL",
    "MINDFULNESS",
    "CHORES",
    "HOBBIES",
    "OUTDOORS",
    "LEARNING",
    "CREATIVITY",
    name="questcategory",
    create_type=False,
)
questdifficulty = postgresql.ENUM(
    "EASY",
    "MEDIUM",
    "HARD",
    name="questdifficulty",
    create_type=False,
)
questrating = postgresql.ENUM(
    "THUMBS_UP",
    "THUMBS_DOWN",
    name="questrating",
    create_type=False,
)
queststatus = postgresql.ENUM(
    "POTENTIAL",
    "ACCEPTED",
    "COMPLETED",
    "FAILED",
    "ABANDONED",
    "DECLINED",
    name="queststatus",
    create_type=False,
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sidequest_quest_templates",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column(
            "category",
            questcategory,
            nullable=False,
        ),
        sa.Column(
            "difficulty",
            questdifficulty,
            nullable=False,
        ),
        sa.Column("tags", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("estimated_time", sa.String(length=50), nullable=False),
        sa.Column("owner_user_id", sa.Integer(), nullable=True),
        sa.Column("parent_template_id", sa.Integer(), nullable=True),
        sa.Column("model_used", sa.String(length=100), nullable=True),
        sa.Column("fallback_used", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_template_id"],
            ["sidequest.sidequest_quest_templates.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="sidequest",
    )
    op.create_table(
        "sidequest_user_quests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("quest_board_id", sa.Integer(), nullable=True),
        sa.Column("quest_template_id", sa.Integer(), nullable=True),
        sa.Column("resolved_text", sa.Text(), nullable=False),
        sa.Column(
            "status",
            queststatus,
            nullable=False,
        ),
        sa.Column("accepted_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("failed_at", sa.DateTime(), nullable=True),
        sa.Column("abandoned_at", sa.DateTime(), nullable=True),
        sa.Column("declined_at", sa.DateTime(), nullable=True),
        sa.Column(
            "feedback_rating",
            questrating,
            nullable=True,
        ),
        sa.Column("feedback_comment", sa.Text(), nullable=True),
        sa.Column("time_spent", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["quest_board_id"],
            ["sidequest.sidequest_quest_boards.id"],
        ),
        sa.ForeignKeyConstraint(
            ["quest_template_id"],
            ["sidequest.sidequest_quest_templates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="sidequest",
    )
    # Commented out to avoid data loss - only drop after backfilling
    op.drop_table("sidequest_quests", schema="sidequest")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sidequest_quests",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("text", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "category",
            questcategory,
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "estimated_time", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            "difficulty",
            questdifficulty,
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "tags",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "completed_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "feedback_rating",
            questrating,
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("feedback_comment", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("time_spent", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "generated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "model_used", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column("fallback_used", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("quest_board_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            queststatus,
            server_default=sa.text("'POTENTIAL'::queststatus"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["quest_board_id"],
            ["sidequest.sidequest_quest_boards.id"],
            name=op.f("sidequest_quests_quest_board_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("sidequest_quests_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("sidequest_quests_pkey")),
        schema="sidequest",
    )
    op.drop_table("sidequest_user_quests", schema="sidequest")
    op.drop_table("sidequest_quest_templates", schema="sidequest")
    # ### end Alembic commands ###
